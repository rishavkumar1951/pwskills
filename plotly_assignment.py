# -*- coding: utf-8 -*-
"""Plotly Assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TltE_olcMzeu1mKzKSfl2XnbfxYFmxpO

Q1. Load the "titanic" dataset using the load_dataset function of seaborn. Use Plotly express to plot a
scatter plot for age and fare columns in the titanic dataset.
"""

import seaborn as sns
ti = sns.load_dataset('titanic')

import plotly.graph_objects as go
fig = go.Figure()
fig.add_trace(go.Scatter(x=ti.age, y=ti.fare , mode='markers' ))
fig.show()

"""Q2. Using the tips dataset in the Plotly library, plot a box plot using Plotly express."""

import plotly.express as px
df = px.data.tips()
fig = px.box(df, x="total_bill", y="tip")
fig.show()

"""Q3. Using the tips dataset in the Plotly library, Plot a histogram for x= "sex" and y="total_bill" column in
the tips dataset. Also, use the "smoker" column with the pattern_shape parameter and the "day"
column with the color parameter.
"""

df = px.data.tips()
fig = px.histogram(df, x="sex", y="total_bill", color="day", pattern_shape="smoker")
fig.show()

"""Q4. Using the iris dataset in the Plotly library, Plot a scatter matrix plot, using the "species" column for
the color parameter.

Note: Use "sepal_length", "sepal_width", "petal_length", "petal_width" columns only with the
dimensions parameter.
"""

df = px.data.iris()
df.head()

# prompt: Using dataframe df: iris

df.groupby('species')['petal_length'].agg('mean')

fig = go.Figure()
fig.add_trace(go.Scatter(x=df.sepal_length, y=df.petal_length))
fig.show()

fig = go.Figure()
fig.add_trace(go.Scatter(x=df.sepal_width, y=df.petal_width))
fig.show()

"""Q5. What is Distplot? Using Plotly express, plot a distplot."""

# The distplot figure factory displays a combination of statistical representations of numerical data, such as histogram, kernel density estimation or normal curve, and rug plot.


import plotly.figure_factory as ff
import numpy as np
np.random.seed(1)

x = np.random.randn(1000)
hist_data = [x]
group_labels = ['distplot'] # name of the dataset

fig = ff.create_distplot(hist_data, group_labels)
fig.show()

import plotly.figure_factory as ff
import numpy as np

# Add histogram data
x1 = np.random.randn(200) - 2
x2 = np.random.randn(200)
x3 = np.random.randn(200) + 2
x4 = np.random.randn(200) + 4

# Group data together
hist_data = [x1, x2, x3, x4]

group_labels = ['Group 1', 'Group 2', 'Group 3', 'Group 4']

# Create distplot with custom bin_size
fig = ff.create_distplot(hist_data, group_labels, bin_size=.2)
fig.show()

import plotly.figure_factory as ff
import numpy as np

# Add histogram data
x1 = np.random.randn(200)-2
x2 = np.random.randn(200)
x3 = np.random.randn(200)+2
x4 = np.random.randn(200)+4

# Group data together
hist_data = [x1, x2, x3, x4]

group_labels = ['Group 1', 'Group 2', 'Group 3', 'Group 4']

# Create distplot with custom bin_size
fig = ff.create_distplot(hist_data, group_labels, bin_size=[.1, .25, .5, 1])
fig.show()